import nbformat as nbf
nb = nbf.v4.new_notebook()


text1 = """\
# SALES OF A COMPANY
# Instructions / Notes: Read these carefully
Read and execute each cell in order, without skipping forward.
You **may** create new Jupyter notebook cells to use for e.g. testing, debugging, exploring, etc.- this is encouraged in fact! 
**Just make sure that your final answer's dataframes and answers use the set variables outlined below.**
Have fun!"""

code1 = """\
# Run the following to import necessary packages and import dataset. Do not use any additional plotting libraries.
import pandas as pd
import numpy as np
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
import matplotlib
import matplotlib.pyplot as plt
%matplotlib inline
matplotlib.style.use('ggplot')

dA = "AQ_problem-solving-task_datasetA.csv"
dB = "AQ_problem-solving-task_datasetB.csv"
dC = "AQ_problem-solving-task_datasetC.csv"

dfA = pd.read_csv(dA)
dfB = pd.read_csv(dB)
dfC = pd.read_csv(dC)
dfA.head(n=5)"""


text2 = """\
Each of the 3 dataframes loaded above represents average sales of 3 companies A, B, C over a period of time. Run the cell to obtain some descriptive statistics for these datasets below."""

code2 = """\
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
#You will receive 8 outputs: total number of data points, mean, standard deviation, minimum value, 1st quartile (25%), median (50%), 3rd quartile (75%), maximum value for both variables
dfA.describe()"""

code3 = """\
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
#You will receive 8 outputs: total number of data points, mean, standard deviation, minimum value, 1st quartile (25%), median (50%), 3rd quartile (75%), maximum value for both variables
dfB.describe()"""

code4 = """\
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
#You will receive 8 outputs: total number of data points, mean, standard deviation, minimum value, 1st quartile (25%), median (50%), 3rd quartile (75%), maximum value for both variables 
dfC.describe()"""


text3 = """\
# TASK:
Rank order the datasets from the **weakest to the strongest dependency** between the time and average sales. Set the following variable to the optimal ordering (for e.g., ABC, CBA etc). Also provide a brief reasoning behind your answer selection. Finally, tell us whether you used information about the descriptive statistics (obtained by running the cells above) in reasoning about your answer."""

code5 = """\
#Round all your statistics to 2 decimal places before reasoning with them!!

dataset_dependency_ordering = "Write your ordering of datasets here"
dataset_dependency_ordering_reasoning = "Write your reasoning here" 
used_descriptive_statistics_in_reasoning = "Set this variable to yes or no" """

code7 = """\
#If you need to implement any piece of code before finalizing your answer and reasoning, use this space. Don't erase your code segment from the workbook. 
#In case you need any help with syntax, documentation file for the:
#a) pandas library - https://pandas.pydata.org/pandas-docs/stable/
#b) numpy library  - https://docs.scipy.org/doc/numpy/user/index.html
#c) matplotlib library - https://matplotlib.org/contents.html
# DO NOT USE GOOGLE SEARCH!!!
...
...
..."""

text4 = """\
# CLUE: 
**An Anscombe's Triplet is a modified version of an Anscombe's Quartet (https://en.wikipedia.org/wiki/Anscombe%27s_quartet) that has 3 datasets with nearly identical descriptive statistics but with very different appearance when plotted.**
If this clue changes your answer, try again below. Otherwise, if you are confident in your answer above, leave the following untouched."""


code6 = """\
#Show your revised analysis below
#Round all your statistics to 2 decimal places before reasoning with them!!

dataset_dependency_ordering_revised = "Write your ordering of datasets here"
dataset_dependency_ordering_revised_reasoning = "Write your reasoning here"  """

code8 = """\
#If you need to implement any piece of code before finalizing your answer and reasoning, use this space. Don't erase your code segment from the workbook. 
#In case you need any help with syntax, documentation file for the:
#a) pandas library - https://pandas.pydata.org/pandas-docs/stable/
#b) numpy library  - https://docs.scipy.org/doc/numpy/user/index.html
#c) matplotlib library - https://matplotlib.org/contents.html
# DO NOT USE GOOGLE SEARCH!!!
...
...
..."""

nb['cells'] = [nbf.v4.new_markdown_cell(text1),
               nbf.v4.new_code_cell(code1),
               nbf.v4.new_markdown_cell(text2),
               nbf.v4.new_code_cell(code2),
               nbf.v4.new_code_cell(code3),
               nbf.v4.new_code_cell(code4),
               nbf.v4.new_markdown_cell(text3),
               nbf.v4.new_code_cell(code5),
	       nbf.v4.new_code_cell(code7),
               nbf.v4.new_markdown_cell(text4),
               nbf.v4.new_code_cell(code6),
	       nbf.v4.new_code_cell(code8)]


nbf.write(nb, 'Task AQ_Condition 1.ipynb')
