import nbformat as nbf
nb = nbf.v4.new_notebook()


text1 = """\
#ICE CREAM SALES
# Instructions / Notes: Read these carefully
Read and execute each cell in order, without skipping forward.
You **may** create new Jupyter notebook cells to use for e.g. testing, debugging, exploring, etc.- this is encouraged in fact! 
**Just make sure that your final answer dataframes and answers use the set variables outlined below.**
Have fun!"""

code1 = """\
# Run the following to import necessary packages and import dataset. Do not use any additional plotting libraries.
import pandas as pd
import numpy as np
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
import matplotlib
import matplotlib.pyplot as plt
import seaborn as sns
%matplotlib inline
matplotlib.style.use('ggplot')

d1 = "SC_problem-solving-task_dataset.csv"
df = pd.read_csv(d1)
df"""


text2 = """\
**The dataset above contains the ice cream sales, temperature, number of deaths by drowning and humidity level in a city during a timespan of 12 months.**
Identify **meaningful** relationships among pairs of columns in this dataset. Append these pairs of related columns in the following form [column_x, column_y] to the variable below. Also provide a brief reasoning behind your answer selection."""


code2 = """\
# relationships.append(['column_x', 'column_y'])
relationships = []
relationships_reasoning = " "

# do not touch
relationships.sort()
print(relationships)"""


code4 = """\
#If you need to implement any piece of code before finalizing your answer and reasoning, use this space. Don't erase your code segment from the workbook. In case you need any help with syntax, documentation file for the pandas python library (with search function in bottom left corner) is available at https://pandas.pydata.org/pandas-docs/stable/
...
...
..."""


text3 = """\
#CLUE
**Some of the correlations you found above may be spurious: https://en.wikipedia.org/wiki/Spurious_relationship -- Only include meaningful correlations to the list!**
If this clue changes your answer, try again below. Otherwise, if you are confident in your answer above, leave the following untouched."""


code3 = """\
# meaningful_relationships.append(['column_x', 'column_y'])
relationships_revised = []
relationships_reasoning_revised = " "

# do not touch
relationships_revised.sort()
print(relationships_revised) """

code5 = """\
#If you need to implement any piece of code before finalizing your answer and reasoning, use this space. Don't erase your code segment from the workbook. In case you need any help with syntax, documentation file for the pandas python library (with search function in bottom left corner) is available at https://pandas.pydata.org/pandas-docs/stable/
...
...
..."""


nb['cells'] = [nbf.v4.new_markdown_cell(text1),
               nbf.v4.new_code_cell(code1),
               nbf.v4.new_markdown_cell(text2),
               nbf.v4.new_code_cell(code2),
               nbf.v4.new_code_cell(code4),
               nbf.v4.new_markdown_cell(text3),
               nbf.v4.new_code_cell(code3),
               nbf.v4.new_code_cell(code5)]


nbf.write(nb, 'Task SC_Condition 2.ipynb')
