import nbformat as nbf
nb = nbf.v4.new_notebook()


text1 = """\
#SOCIETY
# Instructions / Notes: Read these carefully
Read and execute each cell in order, without skipping forward.
You **may** create new Jupyter notebook cells to use for e.g. testing, debugging, exploring, etc.- this is encouraged in fact! 
**Just make sure that your final answer dataframes and answers use the set variables outlined below.**
Have fun!"""

code1 = """\
# Run the following to import necessary packages and import dataset. Do not use any additional plotting libraries.
import pandas as pd
import numpy as np
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
import matplotlib
import matplotlib.pyplot as plt
%matplotlib inline
matplotlib.style.use('ggplot')

d1 = "SC_society.csv"
df = pd.read_csv(d1)
df"""


text2 = """\
**The dataset above contains various societal factors in a country during a timespan of 2001 to 2015.** 
These factors include the (i) number of movie theatres (Movie_theatres), (ii) the percentage of homes with a washing machine (Washing_machine), (iii) the number of divorces (Divorces), (iv) investments related to infrastructure development (Infrastructure_investment), (v) the number of children born (Birth_rate), (vi) the number of emigrants (Emigrants), (vii) the turn-over on tv commercials (TVcommercial_turnover), (viii) number of individuals transported by trains (Train_transport), (ix) the average yearly temperature (Temperature), (x) the number of newborns given the name Peter (Name_Peter), (xi) the ranking of the country's football club in the football league (Football_Ranking)."""

code2 = """\
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"

#Here are the correlation coefficients between pairs of columns
df.corr(method='pearson')"""


text3 = """\
Identify **meaningful** correlations among pairs of columns in this dataset. Append these pairs of correlated columns in the following form [column_x, column_y] to the variable below. Also provide a brief reasoning behind your answer selection"""

code3 = """\
# correlation.append(['column_x', 'column_y'])
correlations = []
correlations_reasoning = " "

# do not touch
correlations.sort()
print(correlations)"""



text4 = """\
#CLUE
**Read more about the Pearson correlation coefficient used in the .corr() method above: https://en.wikipedia.org/wiki/Pearson_correlation_coefficient.**
If this clue changes your answer, try again below. Otherwise, if you are confident in your answer above, leave the following untouched."""


code4 = """\
# meaningful_correlation.append(['column_x', 'column_y'])
correlations_clue = []
correlations_clue_reasoning = " "

# do not touch
correlations_clue.sort()
print(correlations_clue) """

nb['cells'] = [nbf.v4.new_markdown_cell(text1),
               nbf.v4.new_code_cell(code1),
               nbf.v4.new_markdown_cell(text2),
               nbf.v4.new_code_cell(code2),
               nbf.v4.new_markdown_cell(text3),
               nbf.v4.new_code_cell(code3),
               nbf.v4.new_markdown_cell(text4),
               nbf.v4.new_code_cell(code4),]


nbf.write(nb, 'Task SC_Condition 1.ipynb')
